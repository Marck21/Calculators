@page "/buy-or-rent"
@using Calculators.Models.BuyOrRent
@using static Calculators.Helpers.BuyOrRentHelper

@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IBuyOrRentService BuyOrRentService

<PageTitle>Comprar o alquilar</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-8">
    <MudGrid Spacing="4">

        <MudItem xs="12" md="5">
            <MudPaper Class="pa-4" Elevation="3">
                <MudText Typo="Typo.h5" GutterBottom="true">Datos de Inversión</MudText>

                <MudTabs Elevation="2" Rounded="true" PanelClass="mt-4">
                    <MudTabPanel Text="General">
                        <MudNumericField @bind-Value="inputs.InversionInicial" @bind-Value:after="() => RecalculateAndSave()" Label="Inversión Inicial" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Euro" HelperText="Cantidad inicial para invertir." />
                        <MudSlider @bind-Value="inputs.InversionInicial" @bind-Value:after="() => RecalculateAndSave()" Min="1000" Max="250000" Step="1000" Class="my-4" />
                        <MudNumericField @bind-Value="inputs.AnosInversion" @bind-Value:after="() => RecalculateAndSave()" Label="Años de Inversión" Variant="Variant.Outlined" />
                        <MudSlider @bind-Value="inputs.AnosInversion" @bind-Value:after="() => RecalculateAndSave()" Min="1" Max="50" Class="my-4" />
                        <MudNumericField @bind-Value="inputs.EdadActual" @bind-Value:after="() => RecalculateAndSave()" Label="Edad Actual" Variant="Variant.Outlined" />
                        <MudNumericField @bind-Value="inputs.AlquilerMensualAlternativo" @bind-Value:after="() => RecalculateAndSave()" Label="Alquiler Mensual (si no compras)" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Euro" />
                        <MudSlider @bind-Value="inputs.AlquilerMensualAlternativo" @bind-Value:after="() => RecalculateAndSave()" Min="100" Max="2000" Step="1" Class="my-4" />
                        <MudNumericField @bind-Value="inputs.CrecimientoAnualAlquiler" @bind-Value:after="() => RecalculateAndSave()" Label="Tasa Crecimiento Anual Alquiler (%)" Variant="Variant.Outlined" Format="F2" />
                        <MudSlider @bind-Value="inputs.CrecimientoAnualAlquiler" @bind-Value:after="() => RecalculateAndSave()" Min="0.00" Max="10.00" Step="0.25" Class="my-4" />
                        <MudNumericField T="decimal" Value="calculated.TotalGastosAlquiler" Label="Gastos Totales de Alquiler (Informativo)" ReadOnly="true" Variant="Variant.Filled" Format="C0" Culture="es" />

                        <MudExpansionPanels MultiExpansion="true" Class="mt-4">
                            <MudExpansionPanel Text="Tramos IRPF para Plusvalías (Base del Ahorro)" Expanded="true">
                                <MudSimpleTable Dense="true" Class="mt-2">
                                    <thead>
                                        <tr>
                                            <th>Beneficios</th>
                                            <th style="text-align: right;">Impuesto</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr><td>Hasta 6.000 €</td><td style="text-align: right;">19%</td></tr>
                                        <tr><td>Entre 6.000 € y 50.000 €</td><td style="text-align: right;">21%</td></tr>
                                        <tr><td>Entre 50.000 € y 200.000 €</td><td style="text-align: right;">23%</td></tr>
                                        <tr><td>Entre 200.000 € y 300.000 €</td><td style="text-align: right;">27%</td></tr>
                                        <tr><td>A partir de 300.000 €</td><td style="text-align: right;">28%</td></tr>
                                    </tbody>
                                </MudSimpleTable>
                            </MudExpansionPanel>
                        </MudExpansionPanels>
                    </MudTabPanel>

                    <MudTabPanel Text="Inmobiliaria">
                        <MudCheckBox @bind-Value="inputs.UsarInversionInicialParaEntrada" @bind-Value:after="() => RecalculateAndSave()" Label="Usar Inversión Inicial como Aportación" Class="mb-2" />
                        <div class="my-2">
                            <MudButtonGroup Variant="Variant.Outlined" FullWidth="true" OverrideStyles="false">
                                <MudButton OnClick="@(() => SetDownPaymentPercentage( 0.10m ))">10%</MudButton>
                                <MudButton OnClick="@(() => SetDownPaymentPercentage( 0.20m ))">20%</MudButton>
                                <MudButton OnClick="@(() => SetDownPaymentPercentage( 0.30m ))">30%</MudButton>
                            </MudButtonGroup>
                        </div>
                        <MudNumericField @bind-Value="inputs.Entrada" @bind-Value:after="() => RecalculateAndSave()" Label="Aportación Inicial (Efectivo)" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Euro" Disabled="inputs.UsarInversionInicialParaEntrada" HelperText="Dinero total que aportas (cubre costes + entrada de la hipoteca)." Step="1000" />
                        <MudAlert Severity="@calculated.DownPaymentWarningSeverity" ShowCloseIcon="false" Class="mb-4" Dense="true" Hidden="@(string.IsNullOrEmpty( calculated.DownPaymentWarningMessage ))">
                            @((MarkupString)calculated.DownPaymentWarningMessage)
                        </MudAlert>
                        <MudNumericField @bind-Value="inputs.PrecioVivienda" @bind-Value:after="() => RecalculateAndSave()" Label="Precio de la Vivienda" Step="1000" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Euro" />
                        <MudSlider @bind-Value="inputs.PrecioVivienda" @bind-Value:after="() => RecalculateAndSave()" Min="50000" Max="1000000" Step="1000" Class="my-4" />
                        <MudNumericField @bind-Value="inputs.CrecimientoAnualVivienda" @bind-Value:after="() => RecalculateAndSave()" Label="Tasa Crecimiento Anual Vivienda (%)" Step="0.25" Variant="Variant.Outlined" Format="F2" />
                        <MudSlider @bind-Value="inputs.CrecimientoAnualVivienda" @bind-Value:after="() => RecalculateAndSave()" Min="0.00" Max="10.00" Step="0.25" Class="my-4" />
                        <MudExpansionPanels MultiExpansion="true" Class="mt-4">
                            <MudExpansionPanel Text="Hipoteca" Expanded="true">
                                <MudSimpleTable Dense="true" Class="mt-2">
                                    <tbody>
                                        <tr><td><strong>Coste Total (sin financiación)</strong></td><td style="text-align: right;"><strong>@calculated.CosteTotalVivienda.ToString( "C0", es )</strong></td></tr>
                                        <MudDivider Class="my-2" />
                                        <tr><td>Aportación Inicial (Efectivo)</td><td style="text-align: right;">@inputs.Entrada.ToString( "C0", es )</td></tr>
                                        <tr><td>(-) Costes de Compra (ITP, etc.)</td><td style="text-align: right;">@calculated.CostesTotalesCompra.ToString( "C0", es )</td></tr>
                                        <tr><td><strong>(=) Entrada Neta (sobre precio)</strong></td><td style="text-align: right;"><strong>@calculated.EntradaNeta.ToString( "C0", es )</strong></td></tr>
                                        <MudDivider Class="my-2" />
                                        <tr><td><strong>Importe del Préstamo</strong></td><td style="text-align: right;"><strong>@calculated.ImportePrestamo.ToString( "C0", es )</strong></td></tr>
                                        <tr><td>(+) Total Intereses Pagados</td><td style="text-align: right;">@calculated.CosteTotalIntereses.ToString( "C0", es )</td></tr>
                                        <MudDivider Class="my-2" />
                                        <tr><td><strong>Coste Total (con financiación)</strong></td><td style="text-align: right;"><strong>@calculated.CosteTotalConIntereses.ToString( "C0", es )</strong></td></tr>
                                        <MudDivider Class="my-2" />
                                        <tr><td>Porcentaje de Financiación</td><td style="text-align: right;">@calculated.PorcentajeFinanciacion.ToString( "P1" )</td></tr>
                                        <tr><td>Pago Mensual Hipoteca</td><td style="text-align: right;">@calculated.PagoMensualHipoteca.ToString( "C0", es )</td></tr>
                                    </tbody>
                                </MudSimpleTable>
                            </MudExpansionPanel>
                            <MudExpansionPanel Text="Costes">
                                <MudNumericField @bind-Value="inputs.TipoInteresAnual" @bind-Value:after="() => RecalculateAndSave()" Label="Interés hipoteca TAE (%)" Variant="Variant.Outlined" Format="F2" Step="0.1" />
                                <MudSlider @bind-Value="inputs.TipoInteresAnual" @bind-Value:after="() => RecalculateAndSave()" Min="0.00" Max="10.00" Step="0.1" Class="my-4" />

                                <MudNumericField @bind-Value="inputs.CostesCompra" @bind-Value:after="() => RecalculateAndSave()" Label="Impuestos de Compra (ITP, etc.) (%)" Variant="Variant.Outlined" Format="F2" />
                                <MudSlider @bind-Value="inputs.CostesCompra" @bind-Value:after="() => RecalculateAndSave()" Min="0.00" Max="20.00" Step="0.5" Class="my-2" />

                                <MudNumericField @bind-Value="inputs.GastosFijosCompra" @bind-Value:after="() => RecalculateAndSave()" Label="Gastos Fijos de Compra" Step="250" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Euro" HelperText="Notaría, registro, gestoría, etc." />

                                <MudNumericField @bind-Value="inputs.CostesVenta" @bind-Value:after="() => RecalculateAndSave()" Label="Costes de Venta (%)" Variant="Variant.Outlined" Step="0.1" Format="F2" Class="mt-4" />
                                <MudSlider @bind-Value="inputs.CostesVenta" @bind-Value:after="() => RecalculateAndSave()" Min="0.00" Max="20.00" Step="0.5" Class="my-2" />

                                <MudSimpleTable Dense="true" Class="mt-2">
                                    <tbody>
                                        <tr><td>Costes Totales de Compra</td><td style="text-align: right;">@calculated.CostesTotalesCompra.ToString( "C0", es )</td></tr>
                                        <tr><td>Costes Totales de Venta</td><td style="text-align: right;">@calculated.CostesTotalesVenta.ToString( "C0", es )</td></tr>
                                    </tbody>
                                </MudSimpleTable>
                            </MudExpansionPanel>
                            @if ( calculated.ValorRestanteEnBolsa > 0 )
                            {
                                <MudExpansionPanel Text="Rendimiento Bolsa (restante)">
                                    <MudSimpleTable Dense="true" Class="mt-2">
                                        <tbody>
                                            <tr><td>Inversión Inicial (Restante)</td><td style="text-align: right;">@((inputs.InversionInicial - inputs.Entrada).ToString( "C0", es ))</td></tr>
                                            <tr><td>Valor Final Cartera (Bruto)</td><td style="text-align: right;">@calculated.ValorRestanteEnBolsa.ToString( "C0", es )</td></tr>
                                            <tr><td>Impuestos Plusvalías (Restante)</td><td style="text-align: right;">@calculated.CosteImpuestosPlusvaliasRestante.ToString( "C0", es )</td></tr>
                                        </tbody>
                                    </MudSimpleTable>
                                </MudExpansionPanel>
                            }
                        </MudExpansionPanels>
                    </MudTabPanel>

                    <MudTabPanel Text="Bolsa">
                        <MudNumericField Value="inputs.InversionInicial" Label="Inversión Inicial en Bolsa (Escenario único)" Variant="Variant.Filled" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Euro" Disabled="true" Format="C0" Culture="es" />
                        <MudNumericField @bind-Value="inputs.CrecimientoAnualBolsa" @bind-Value:after="() => RecalculateAndSave()" Label="Tasa Crecimiento Anual Bolsa (%)" Step="0.1" Variant="Variant.Outlined" Format="F2" Class="mt-4" />
                        <MudSlider @bind-Value="inputs.CrecimientoAnualBolsa" @bind-Value:after="() => RecalculateAndSave()" Min="0.00" Max="20.00" Step="0.25" Class="my-4" />
                        <MudNumericField T="decimal" Value="calculated.ValorCarteraBolsa" Label="Valor de la Cartera" ReadOnly="true" Variant="Variant.Filled" Format="C0" Culture="es" />
                        <MudNumericField T="decimal" Value="calculated.CosteImpuestosPlusvalias" Label="Coste Impuestos Plusvalías (25%)" ReadOnly="true" Variant="Variant.Filled" Format="C0" Culture="es" />
                    </MudTabPanel>
                </MudTabs>
            </MudPaper>
        </MudItem>

        <MudItem xs="12" md="7">
            <MudPaper Class="pa-4" Elevation="1">
                <MudText Typo="Typo.h5" GutterBottom="true">Resumen del Periodo de Inversión</MudText>
                <MudGrid>
                    <MudItem xs="12" sm="6">
                        <MudText Typo="Typo.h6" Align="Align.Center">Escenario Inmobiliario</MudText>
                        <MudCard Elevation="0">
                            <MudChart ChartType="ChartType.StackedBar" ChartSeries="@RealEstateChartSeries" XAxisLabels="@XAxisLabels" Width="100%" Height="400px" ChartOptions="@RealEstateChartOptions" />
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudText Typo="Typo.h6" Align="Align.Center">Escenario Bolsa</MudText>
                        <MudCard Elevation="0">
                            <MudChart ChartType="ChartType.StackedBar" ChartSeries="@StockChartSeries" XAxisLabels="@XAxisLabels" Width="100%" Height="400px" ChartOptions="@StockChartOptions" />
                        </MudCard>
                    </MudItem>
                </MudGrid>
                <MudPaper Elevation="3" Class="d-flex flex-column align-center justify-center mud-theme-tertiary rounded-lg pa-4 my-6">
                    <MudText Typo="Typo.h6">Diferencia Retorno Total (Bolsa - Inmobiliaria)</MudText>
                    <MudText Typo="Typo.h2" Style="@(calculated.DiferenciaRetornoTotal >= 0 ? "color: var(--mud-palette-white);" : "color: var(--mud-palette-error);")">
                        @calculated.DiferenciaRetornoTotal.ToString( "C0", es )
                    </MudText>
                </MudPaper>
                <MudGrid>
                    <MudItem xs="12" sm="6">
                        <MudCard Class="mb-4">
                            <MudCardHeader><CardHeaderContent><MudText Typo="Typo.h6">Inversión Inmobiliaria</MudText></CardHeaderContent></MudCardHeader>
                            <MudCardContent>
                                <MudSimpleTable><tbody><tr><td>Retorno Total</td><td><MudText Typo="Typo.h6">@calculated.RetornoTotalInmobiliaria.ToString( "C0", es )</MudText></td></tr></tbody></MudSimpleTable>
                                <MudExpansionPanels Class="mt-2">
                                    <MudExpansionPanel Text="Desglose del Saldo Final">
                                        <MudSimpleTable Dense="true">
                                            <tbody>
                                                @ListItem( true, "Precio Venta Estimado", calculated.PrecioVentaEstimado )
                                                @ListItem( true, "Valor Bruto Bolsa (Restante)", calculated.ValorRestanteEnBolsa )
                                                @ListItem( false, "Coste Total Intereses", calculated.CosteTotalIntereses )
                                                @ListItem( false, "Costes de Compra", calculated.CostesTotalesCompra )
                                                @ListItem( false, "Costes de Venta", calculated.CostesTotalesVenta )
                                                @ListItem( false, "Impuestos Inmueble", calculated.CosteImpuestosPlusvaliasInmueble )
                                                @ListItem( false, "Impuestos Bolsa (Restante)", calculated.CosteImpuestosPlusvaliasRestante )
                                            </tbody>
                                        </MudSimpleTable>
                                    </MudExpansionPanel>
                                </MudExpansionPanels>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudCard>
                            <MudCardHeader><CardHeaderContent><MudText Typo="Typo.h6">Inversión en Bolsa</MudText></CardHeaderContent></MudCardHeader>
                            <MudCardContent>
                                <MudSimpleTable><tbody><tr><td>Retorno Total</td><td><MudText Typo="Typo.h6">@calculated.RetornoTotalBolsa.ToString( "C0", es )</MudText></td></tr><tr><td>Flujo Caja Mensual</td><td><MudText Typo="Typo.h6" Color="@(calculated.FlujoCajaMensualBolsa >= 0 ? Color.Success : Color.Error)">@calculated.FlujoCajaMensualBolsa.ToString( "C0", es )</MudText></td></tr></tbody></MudSimpleTable>
                                <MudExpansionPanels Class="mt-2">
                                    <MudExpansionPanel Text="Desglose del Saldo Final">
                                        <MudSimpleTable Dense="true"><tbody>@ListItem( true, "Valor de la Cartera", calculated.ValorCarteraBolsa ) @ListItem( false, "Impuestos Plusvalías", calculated.CosteImpuestosPlusvalias )</tbody></MudSimpleTable>
                                    </MudExpansionPanel>
                                </MudExpansionPanels>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private InvestmentInputs inputs = new();
    private CalculatedValues calculated = new();
    private System.Globalization.CultureInfo es = new System.Globalization.CultureInfo( "es-ES" );
    private bool isLoading = true;

    private List<ChartSeries> RealEstateChartSeries = new();
    private List<ChartSeries> StockChartSeries = new();
    private string[] XAxisLabels = [];

    private ChartOptions RealEstateChartOptions = new ChartOptions { YAxisFormat = "c0", ChartPalette = new string[] { "#594AE2", "#A6A0F0", "#FF9800", "#BDBDBD" } };
    private ChartOptions StockChartOptions = new ChartOptions { YAxisFormat = "c0", ChartPalette = new string[] { "#00C853", "#FF9800" } };

    protected override async Task OnAfterRenderAsync( bool firstRender )
    {
        if ( firstRender )
        {
            var savedInputs = await localStorage.GetItemAsync<InvestmentInputs>( "investmentInputs" );
            if ( savedInputs != null ) inputs = savedInputs;
            isLoading = false;
            await RecalculateAndSave( isInitialLoad: true );
        }
    }

    private async Task SetDownPaymentPercentage( decimal targetTotalPercentage )
    {
        if ( inputs.PrecioVivienda > 0 )
        {
            decimal netPercentage = 0m;
            if ( targetTotalPercentage == 0.30m )
                netPercentage = 0.20m;
            else if ( targetTotalPercentage == 0.20m )
                netPercentage = 0.10m;
            else if ( targetTotalPercentage == 0.10m )
                netPercentage = 0.00m;

            decimal purchaseCosts = (inputs.PrecioVivienda * ((decimal)inputs.CostesCompra / 100)) + inputs.GastosFijosCompra;
            decimal requiredNetDownPayment = inputs.PrecioVivienda * netPercentage;
            decimal totalCashOutlay = purchaseCosts + requiredNetDownPayment;
            inputs.UsarInversionInicialParaEntrada = false;
            inputs.Entrada = Math.Round( totalCashOutlay );

            await RecalculateAndSave();
        }
    }

    private async Task RecalculateAndSave( bool isInitialLoad = false )
    {
        if ( isLoading && !isInitialLoad ) return;
        if ( inputs.UsarInversionInicialParaEntrada ) inputs.Entrada = inputs.InversionInicial;
        calculated = BuyOrRentService.Calculate( inputs, ref RealEstateChartSeries, ref StockChartSeries, ref XAxisLabels, RealEstateChartOptions, StockChartOptions );
        if ( !isInitialLoad ) await localStorage.SetItemAsync( "investmentInputs", inputs );
        StateHasChanged();
    }

    private RenderFragment ListItem( bool isPositive, string label, decimal value )
    {
        var color = isPositive ? "color: var(--mud-palette-success);" : "color: var(--mud-palette-error);";
        var icon = isPositive ? Icons.Material.Filled.AddCircle : Icons.Material.Filled.RemoveCircle;
        return @<tr style="font-size: 0.9rem;"><td><MudIcon Icon="@icon" Style="@color" Class="mr-1" Size="Size.Small" /> @label</td><td style="text-align: right;">@value.ToString( "C0", es )</td></tr>;
    }
}